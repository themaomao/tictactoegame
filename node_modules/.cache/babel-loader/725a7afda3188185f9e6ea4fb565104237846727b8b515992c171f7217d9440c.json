{"ast":null,"code":"var _jsxFileName = \"/Users/maomao/ticprac-one-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CoreOard } from \"./components/CoreOard\";\nimport { EsetUtton } from \"./components/EsetUtton\";\nimport { Oard } from \"./components/Oard\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const WIN_CONDITIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const [aPlaying, setAPlaying] = useState(true);\n  const [Oard, setOard] = useState(Array(9).fill(null));\n  const [cores, setCores] = useState({\n    aCore: 0,\n    bCore: 0\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const handleBoxClick = boxIdx => {\n    // Step 1: Update the board\n    const updatedBoard = board.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n    setBoard(updatedBoard);\n    const winner = checkWinner(updatedBoard);\n    if (winner) {\n      if (winner === \"O\") {\n        let {\n          oScore\n        } = scores;\n        oScore += 1;\n        setScores({\n          ...scores,\n          oScore\n        });\n      } else {\n        let {\n          xScore\n        } = scores;\n        xScore += 1;\n        setScores({\n          ...scores,\n          xScore\n        });\n      }\n    }\n    setXPlaying(!xPlaying);\n  };\n  const checkWinner = board => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      // Iterate through win conditions and check if either player satisfies them\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  };\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CoreOard, {\n      cores: cores,\n      aPlaying: aPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Oard, {\n      Oard: Oard,\n      onClick: gameOver ? esetOard : handleBoxClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EsetUtton, {\n      EsetOard: EsetOard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"V/Cg5fTDcCZBYeznVVms2Yz3IXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CoreOard","EsetUtton","Oard","jsxDEV","_jsxDEV","App","_s","WIN_CONDITIONS","aPlaying","setAPlaying","setOard","Array","fill","cores","setCores","aCore","bCore","gameOver","setGameOver","handleBoxClick","boxIdx","updatedBoard","board","map","value","idx","xPlaying","setBoard","winner","checkWinner","oScore","scores","setScores","xScore","setXPlaying","i","length","x","y","z","resetBoard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","esetOard","EsetOard","_c","$RefreshReg$"],"sources":["/Users/maomao/ticprac-one-react/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport { CoreOard } from \"./components/CoreOard\";\nimport { EsetUtton } from \"./components/EsetUtton\";\nimport { Oard } from \"./components/Oard\";\nimport './App.css';\n\nconst App =() => {\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ]\n\n  const [aPlaying, setAPlaying] = useState(true);\n  const [Oard, setOard] = useState(Array(9).fill(null))\n  const [cores, setCores] = useState({ aCore:0, bCore:0 })\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleBoxClick = (boxIdx) => {\n    // Step 1: Update the board\n    const updatedBoard = board.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    })\n\n    setBoard(updatedBoard);\n\n    const winner = checkWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        let { oScore } = scores;\n        oScore += 1;\n        setScores({ ...scores, oScore })\n      } else {\n        let { xScore } = scores;\n        xScore += 1;\n        setScores({ ...scores, xScore })\n      }\n    }\n\n    setXPlaying(!xPlaying);\n  }\n\n  const checkWinner = (board) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      // Iterate through win conditions and check if either player satisfies them\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  }\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\nreturn(\n  <div className=\"App\">\n    <CoreOard cores={cores} aPlaying={aPlaying} />\n      <Oard Oard={Oard} onClick={gameOver ? esetOard : handleBoxClick} />\n      <EsetUtton EsetOard={EsetOard} />\n    </div>\n);\n\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}