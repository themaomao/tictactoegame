{"ast":null,"code":"import _objectSpread from\"/Users/maomao/ticprac-one-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/maomao/ticprac-one-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Oard}from\"./components/Oard\";import{EsetUtton}from\"./components/EsetUtton\";import{CoreOard}from\"./components/CoreOard\";import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var WIN_CONDITIONS=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];var _useState=useState(true),_useState2=_slicedToArray(_useState,2),aPlaying=_useState2[0],setAPlaying=_useState2[1];var _useState3=useState(Array(9).fill(null)),_useState4=_slicedToArray(_useState3,2),oard=_useState4[0],setOard=_useState4[1];var _useState5=useState({aCore:0,bCore:0}),_useState6=_slicedToArray(_useState5,2),cores=_useState6[0],setCores=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),gameOver=_useState8[0],setGameOver=_useState8[1];var handleOxClick=function handleOxClick(oxIdx){// Step 1: Update the board\nvar updatedOard=oard.map(function(value,idx){if(idx===oxIdx){return aPlaying?\"A\":\"B\";}else{return value;}});setOard(updatedOard);var winner=checkWinner(updatedOard);if(winner){if(winner===\"B\"){var bCore=cores.bCore;bCore+=1;setCores(_objectSpread(_objectSpread({},cores),{},{bCore:bCore}));}else{var aCore=cores.aCore;aCore+=1;setCores(_objectSpread(_objectSpread({},cores),{},{aCore:aCore}));}}setAPlaying(!aPlaying);};var checkWinner=function checkWinner(oard){for(var i=0;i<WIN_CONDITIONS.length;i++){var _WIN_CONDITIONS$i=_slicedToArray(WIN_CONDITIONS[i],3),x=_WIN_CONDITIONS$i[0],y=_WIN_CONDITIONS$i[1],z=_WIN_CONDITIONS$i[2];// Iterate through win conditions and check if either player satisfies them\nif(oard[x]&&oard[x]===oard[y]&&oard[y]===oard[z]){setGameOver(true);return oard[x];}}};var esetOard=function esetOard(){setGameOver(false);setOard(Array(9).fill(null));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(CoreOard,{cores:cores,aPlaying:aPlaying}),/*#__PURE__*/_jsx(Oard,{oard:oard,onClick:gameOver?esetOard:handleOxClick}),/*#__PURE__*/_jsx(EsetUtton,{esetOard:esetOard})]});};export default App;","map":{"version":3,"names":["React","useState","Oard","EsetUtton","CoreOard","jsx","_jsx","jsxs","_jsxs","App","WIN_CONDITIONS","_useState","_useState2","_slicedToArray","aPlaying","setAPlaying","_useState3","Array","fill","_useState4","oard","setOard","_useState5","aCore","bCore","_useState6","cores","setCores","_useState7","_useState8","gameOver","setGameOver","handleOxClick","oxIdx","updatedOard","map","value","idx","winner","checkWinner","_objectSpread","i","length","_WIN_CONDITIONS$i","x","y","z","esetOard","className","children","onClick"],"sources":["/Users/maomao/ticprac-one-react/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport { Oard } from \"./components/Oard\";\n\nimport { EsetUtton } from \"./components/EsetUtton\";\nimport { CoreOard } from \"./components/CoreOard\";\n\n\nimport './App.css';\n\nconst App =() => {\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ]\n\n  const [aPlaying, setAPlaying] = useState(true);\n  const [oard, setOard] = useState(Array(9).fill(null))\n  const [cores, setCores] = useState({ aCore:0, bCore:0 })\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleOxClick = (oxIdx) => {\n    // Step 1: Update the board\n    const updatedOard = oard.map((value, idx) => {\n      if (idx === oxIdx) {\n        return aPlaying ? \"A\" : \"B\";\n      } else {\n        return value;\n      }\n    })\n\n    setOard(updatedOard);\n\n    const winner = checkWinner(updatedOard);\n\n    if (winner) {\n      if (winner === \"B\") {\n        let { bCore } = cores;\n        bCore += 1;\n        setCores({ ...cores, bCore })\n      } else {\n        let { aCore } = cores;\n        aCore += 1;\n        setCores({ ...cores, aCore })\n      }\n    }\n\n    setAPlaying(!aPlaying);\n  }\n\n  const checkWinner = (oard) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      // Iterate through win conditions and check if either player satisfies them\n      if (oard[x] && oard[x] === oard[y] && oard[y] === oard[z]) {\n        setGameOver(true);\n        return oard[x];\n      }\n    }\n  }\n\n  const esetOard = () => {\n    setGameOver(false);\n    setOard(Array(9).fill(null));\n  }\n\nreturn(\n  <div className=\"App\">\n    <CoreOard cores={cores} aPlaying={aPlaying} />\n      <Oard oard={oard} onClick={gameOver ? esetOard : handleOxClick} />\n      <EsetUtton esetOard={esetOard} />\n    </div>\n);\n\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}